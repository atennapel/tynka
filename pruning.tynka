def Id {A : Meta} (x y : A) = (P : A -> Meta) -> P x -> P y
def Refl {A} {x : A} : Id {A} x x = \P p. p

def the (A : Meta) (x : A) : A = x

def m (A B : Meta) (x y : Meta) : Meta = _
def test = \a b. the (Id (m a a) (\x y. y)) Refl

def m2 : Meta -> Meta -> Meta -> Meta = _
def test2 = \a b c. the (Id (m2 a b c) (m2 c b a)) Refl

def pr1 = \f x. f x
def pr2 = \f x y. f x y
def pr3 = \f. f Meta
