def (+) a b = primIntAdd a b

def k (a b : Int) := a

def test (a b : Int) := k (k a a) (k b b)

def head (d : Int) (l : List Int) : Int :=
  caseList l d (\hd tl. hd)

def test2 (a : Int) := k a a

def test3 : Int -> Int -> Int := \x. let z := 1; \y. x + y + z

def sum (l : List Int) : Int :=
  fix (go l. \acc. caseList l acc (\hd tl. go tl (acc + hd))) l 0
