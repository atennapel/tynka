import "lib/Prelude"
import "lib/State"

def (+) = Int/add
def (>>>) = State/seq
def (<$>) = State/map

def FibState = Pair Int Int

def fibStep (st : FibState) : FibState =
  Pair/case st \x1 x2. MkPair x2 (x1 + x2)

def fibState (n : Int) : State FibState Int =
  State/updateN n fibStep >>> (fst <$> State/get)

def fib (n : Int) : Int := State/exec (fibState n) (0, 1)

def main := putLn (fib 8)
