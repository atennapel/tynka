import "lib/Primitives" (...)
import "lib/JVM" (...)
import "lib/Int" (...)

def State (S A : VTy) = S -> (S ** A)
def returnS {S A : VTy} (x : A) : State S A = \s. (s, x)
def bindS {S A B : VTy} (c : State S A) (k : A -> State S B) : State S B =
  \s. let res := c s; k res.2 res.1
def getS {S : VTy} : State S S = \s. (s, s)
def putS {S : VTy} (s : S) : State S Unit = \_. (s, U)

def postInc : State Int Int :=
  bindS getS \s.
  bindS (putS (s + 1)) \_.
  returnS s
