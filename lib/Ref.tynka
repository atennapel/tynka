import "lib/Base" (...)
import "lib/Jvm" (...)
import "lib/IO" as IO
import "lib/Array" as Array

def Ref A = Array A

def new {A : VTy} (x : A) : IO (Ref A) = Array/new 1 x

def unsafeNew {A : VTy} : IO (Ref A) = Array/unsafeNew 1

def get {A : VTy} (ref : Ref A) : IO A = Array/get 0 ref

def set {A : VTy} (x : A) (ref : Ref A) : IO Unit = Array/set 0 x ref

def getSet {A : VTy} (x : A) (ref : Ref A) : IO A = Array/update 0 (\_. x) ref

def updateIO {A : VTy} (f : A -> IO A) (ref : Ref A) : IO A = Array/updateIO 0 f ref

def update {A : VTy} (f : A -> A) (ref : Ref A) : IO A =
  updateIO (\x. IO/return (f x)) ref
