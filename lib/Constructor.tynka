import "lib/Base"

def Con/expose = exposeCon

def Con/field {A : VTy} {C : Label} (c : Con A C) (i : Label) (chi : ConHasIndex C i) : ConParamType A C i =
  fieldCon c i chi

def Con/unsafeMutate {A : VTy} {C : Label} (c : Con A C) (i : Label) (x : ConParamType A C i) : Con A C =
  foreign (Con A C) (appendLabel (appendLabel (appendLabel "mutateCon:" C) ":") i) c x

def Con/unsafeMutateIO {A : VTy} {C : Label} (c : Con A C) (i : Label) (x : ConParamType A C i) : IO Unit =
  foreignIO Unit (appendLabel (appendLabel (appendLabel "mutateConUnit:" C) ":") i) c x
