import "lib/Base" (VTy, Bool, (!))
import "lib/JVM" (...)

opaque def Eq (A : VTy) = A -> A -> Bool
def MkEq {A : VTy} (eq : A -> A -> Bool) : Eq A = unfold Eq; eq
def (==) {A} {auto eq : Eq A} (x y : A) : Bool = unfold Eq; eq x y
def (!=) {A} {auto eq : Eq A} (x y : A) : Bool = !(x == y)

auto def EqInt : Eq Int = MkEq eqInt
auto def EqChar : Eq Char = MkEq eqChar
auto def EqLong : Eq Long = MkEq eqLong
auto def EqStr : Eq Str = MkEq equalsStr
